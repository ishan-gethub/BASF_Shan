// 10. Custom look and feel is appreciated. Feel free to provide a creative and user-friendly application.

// Widget on Side Panel

<mvc:View controllerName="your-namespace.controller.View1"
	xmlns:mvc="sap.ui.core.mvc" displayBlock="true"
	xmlns:core="sap.ui.core"
	xmlns:f="sap.f"
	xmlns="sap.m" 
        class="viewPadding">

	<Page id="page">
	  <content>

	    <f:SidePanel id="id_sp" sidePanelResizable="true" 
                                          toggle="onToggle" 
                                          sidePanelPosition="Right" 
                                          sidePanelWidth="30rem">
	      <f:mainContent>					
                ... Add your main Content here...
	      </f:mainContent>
	      <f:items>

	        <f:SidePanelItem icon="sap-icon://wounds-doc"          
                                  text="ChatAssistant" class="spi">
		  <f:content>
		    <VBox width="100%">
		      <IllustratedMessage id="id_illuMsg" 
                                          title="Chat Assistant" 
                                          class="sapUiLargeMarginTop"
                                          description="Ask me anything" 
                                          illustrationType="tnt-FaceID"
                                          illustrationSize="Scene">
                        <additionalContent>
                          <Button text="Lets go" press="onPressHide"/
                        </additionalContent>
                      </IllustratedMessage>

                      <ScrollContainer id="id_SC" visible="false" 
                                       width="100%"
                                       height="500px" 
                                       vertical="true">
                        <List id="id_List" items="{path:'chatbot>/list'}"
                                          noDataText="No Chat history..">    
                          <items>
                            <FeedListItem text="{chatbot>text}" 
                                  icon="{= ${chatbot>type} === 'query' ?                                        
                                  'sap-icon://customer' : 'sap-icon://da-2' }">
                            </FeedListItem>                        
                          </items>
                        </List>
                      </ScrollContainer>
                      <VBox id="id_box" visible="false" width="100%">
                        <Input width="100%" 
                               placeholder="Type your query here.."
                               submit="onSubmitQuery"/>
                      </VBox>
                    </VBox>
                  </f:content>
                </f:SidePanelItem>
              </f:items>
            </f:SidePanel>
          </content>
        </Page>
</mvc:View>

	// Digression on Expression Binding

<List id="id_List" items="{path:'chatbot>/list'}"
                   noDataText="No Chat history..">    // Change to our request
  <items>
    <FeedListItem text="{chatbot>text}" 
                  icon="{= ${chatbot>type} === 'query' ?                                        
                  'sap-icon://customer' : 'sap-icon://da-2' }">
    </FeedListItem>                        
  </items>
</List>

	// We have an some chat assistant UI friendly now

that.jsonModel = new JSONModel();
this.getView().setModel(that.jsonModel, "chatbot");


	// To call the API

onSubmitQuery: function (oEvent) {
        var oInput = oEvent.getSource();
        var sQuery = oInput.getValue();
        oInput.setValue("");

        // Add User query to the model
        that.aList = that.jsonModel.getProperty("/list");
        if (!that.aList) {
          that.aList = [];
        }

        var oJsonObj = {
          text: sQuery,
          type: "query",
        };
        that.aList.push(oJsonObj);
        that.oJsonModel.setProperty("/list", that.aList);

        // Add Bot Response to the model
        // fetch existing model
        that.aList = that.oJsonModel.getProperty("/list");
        var sUrl;

        sUrl = "<your-api-endpoint>/query";

        this.postAPI(sUrl, sQuery)
          .done(function (result) {
            var aList = Array.isArray(result) ? result : [result];
            that.oJsonModel.setProperty("/list", that.aList.extend(aList));
          })
          .fail(function (result) {
            var aList = [];
            var oJsonObj = {
              text: "Failed to connect to backend!",
              type: "response",
            };
            that.aList.push(oJsonObj);
            that.oJsonModel.setProperty("/list", that.aList);
          })
          .always(() => {
          });
      }
